equals()   --> is defined in Obeject class,that means it is defined implicitly in every Java class
           --> the defaul implementation in Object class say that equality is the same as object identity
           --> so equality means that the two objects are the same instance of a class
           --> the equals() can be overrided

equals() contract
    Java SE defines a contract that implementation of equals() must fullfill
        --> reflexive  --> object must equal itself
        --> symmetric  --> x.equals(y) must return same result as y.equals(x)
        --> transitive --> if x.equals(y) and y.equals(z) then also x.equals(z)
        --> consistent --> the value of equals() should change only if a property contained in equals() changes



 --> symmetry is violated often when we extend a class that has overriden equals() (inheritance)
 --> fixing symmetry violation --> using composition instead inheritance
